{
  "material_test.py::test_create_material": {
    "S": "kg * m ** 2 / K / s ** 3",
    "S_std": "kg * m ** 2 / K / s ** 3",
    "T": "K",
    "T_ref": "K",
    "V": "m ** 3 / s",
    "mu": "kg * m ** 2 / mol / s ** 2",
    "mu_std": "kg * m ** 2 / mol / s ** 2",
    "n": "mol / s",
    "p": "J / m ** 3",
    "p_ref": "kg / m / s ** 2",
    "p_std": "kg / m / s ** 2"
  },
  "material_test.py::test_material_lab": [
    "S",
    "S_std",
    "T",
    "T_ref",
    "V",
    "mu",
    "mu_std",
    "n",
    "p",
    "p_ref",
    "p_std"
  ],
  "numeric_test.py::test_material_collect_props": {
    "S": "kg * m ** 2 / K / s ** 3",
    "S_std": "kg * m ** 2 / K / s ** 3",
    "T": "K",
    "T_ref": "K",
    "V": "m ** 3 / s",
    "mu": {
      "H2O": "kg * m ** 2 / mol / s ** 2",
      "NO2": "kg * m ** 2 / mol / s ** 2"
    },
    "mu_std": {
      "H2O": "kg * m ** 2 / mol / s ** 2",
      "NO2": "kg * m ** 2 / mol / s ** 2"
    },
    "n": {
      "H2O": "mol / s",
      "NO2": "mol / s"
    },
    "p": "J / m ** 3",
    "p_ref": "kg / m / s ** 2",
    "p_std": "kg / m / s ** 2"
  },
  "numeric_test.py::test_material_collect_thermo_param": {
    "BostonMathiasAlphaFunction": {
      "eta": {
        "H2O": "",
        "NO2": ""
      }
    },
    "CriticalParameters": {
      "T_c": {
        "H2O": "K",
        "NO2": "K"
      },
      "omega": {
        "H2O": "",
        "NO2": ""
      },
      "p_c": {
        "H2O": "kg / m / s ** 2",
        "NO2": "kg / m / s ** 2"
      }
    },
    "H0S0ReferenceState": {
      "T_ref": "K",
      "dh_form": {
        "H2O": "kg * m ** 2 / mol / s ** 2",
        "NO2": "kg * m ** 2 / mol / s ** 2"
      },
      "p_ref": "kg / m / s ** 2",
      "s_0": {
        "H2O": "kg * m ** 2 / K / mol / s ** 2",
        "NO2": "kg * m ** 2 / K / mol / s ** 2"
      }
    },
    "LinearHeatCapacity": {
      "cp_a": {
        "H2O": "kg * m ** 2 / K / mol / s ** 2",
        "NO2": "kg * m ** 2 / K / mol / s ** 2"
      },
      "cp_b": {
        "H2O": "kg * m ** 2 / K ** 2 / mol / s ** 2",
        "NO2": "kg * m ** 2 / K ** 2 / mol / s ** 2"
      }
    },
    "MixingRule_A": {
      "T_ref": "K"
    },
    "VolumeShift": {
      "c_i": {
        "H2O": "m ** 3 / mol",
        "NO2": "m ** 3 / mol"
      }
    }
  },
  "numeric_test.py::test_square_model": {
    "args": {
      "model_params": {
        "N": "mol / s",
        "T": "\u00b0C",
        "p": "bar",
        "x_c3": "%"
      },
      "states": {
        "local": {
          "x_000": "",
          "x_001": "",
          "x_002": "",
          "x_003": ""
        }
      },
      "thermo_params": {
        "default": {
          "BostonMathiasAlphaFunction": {
            "eta": {
              "CH3-(CH2)2-CH3": "",
              "CH3-CH2-CH3": ""
            }
          },
          "CriticalParameters": {
            "T_c": {
              "CH3-(CH2)2-CH3": "K",
              "CH3-CH2-CH3": "K"
            },
            "omega": {
              "CH3-(CH2)2-CH3": "",
              "CH3-CH2-CH3": ""
            },
            "p_c": {
              "CH3-(CH2)2-CH3": "kg / m / s ** 2",
              "CH3-CH2-CH3": "kg / m / s ** 2"
            }
          },
          "H0S0ReferenceState": {
            "T_ref": "K",
            "dh_form": {
              "CH3-(CH2)2-CH3": "kg * m ** 2 / mol / s ** 2",
              "CH3-CH2-CH3": "kg * m ** 2 / mol / s ** 2"
            },
            "p_ref": "kg / m / s ** 2",
            "s_0": {
              "CH3-(CH2)2-CH3": "kg * m ** 2 / K / mol / s ** 2",
              "CH3-CH2-CH3": "kg * m ** 2 / K / mol / s ** 2"
            }
          },
          "LinearHeatCapacity": {
            "cp_a": {
              "CH3-(CH2)2-CH3": "kg * m ** 2 / K / mol / s ** 2",
              "CH3-CH2-CH3": "kg * m ** 2 / K / mol / s ** 2"
            },
            "cp_b": {
              "CH3-(CH2)2-CH3": "kg * m ** 2 / K ** 2 / mol / s ** 2",
              "CH3-CH2-CH3": "kg * m ** 2 / K ** 2 / mol / s ** 2"
            }
          },
          "MixingRule_A": {
            "T_ref": "K"
          },
          "VolumeShift": {
            "c_i": {
              "CH3-(CH2)2-CH3": "m ** 3 / mol",
              "CH3-CH2-CH3": "m ** 3 / mol"
            }
          }
        }
      }
    },
    "res": {
      "residuals": {
        "N": "mol / s",
        "T": "K",
        "p": "J / m ** 3",
        "x": "% * mol / s"
      },
      "thermo_props": {
        "local": {
          "N": "mol / s",
          "S": "kg * m ** 2 / K / s ** 3",
          "S_std": "kg * m ** 2 / K / s ** 3",
          "T": "K",
          "T_ref": "K",
          "V": "m ** 3 / s",
          "mu": {
            "CH3-(CH2)2-CH3": "kg * m ** 2 / mol / s ** 2",
            "CH3-CH2-CH3": "kg * m ** 2 / mol / s ** 2"
          },
          "mu_std": {
            "CH3-(CH2)2-CH3": "kg * m ** 2 / mol / s ** 2",
            "CH3-CH2-CH3": "kg * m ** 2 / mol / s ** 2"
          },
          "n": {
            "CH3-(CH2)2-CH3": "mol / s",
            "CH3-CH2-CH3": "mol / s"
          },
          "p": "J / m ** 3",
          "p_ref": "kg / m / s ** 2",
          "p_std": "kg / m / s ** 2",
          "x": {
            "CH3-(CH2)2-CH3": "",
            "CH3-CH2-CH3": ""
          }
        }
      }
    }
  }
}