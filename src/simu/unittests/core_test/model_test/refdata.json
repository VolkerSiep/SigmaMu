{
  "material_test.py::test_create_material": {
    "S": "kg * m ** 2 / K / s ** 3",
    "S_std": "kg * m ** 2 / K / s ** 3",
    "T": "K",
    "T_ref": "K",
    "V": "m ** 3 / s",
    "mu": "kg * m ** 2 / mol / s ** 2",
    "mu_std": "kg * m ** 2 / mol / s ** 2",
    "n": "mol / s",
    "p": "J / m ** 3",
    "p_ref": "kg / m / s ** 2",
    "p_std": "kg / m / s ** 2"
  },
  "material_test.py::test_material_lab": [
    "S",
    "S_std",
    "T",
    "T_ref",
    "V",
    "mu",
    "mu_std",
    "n",
    "p",
    "p_ref",
    "p_std"
  ],
  "numeric_test.py::test_material_collect_props": [
    "S",
    "S_std",
    "T",
    "T_ref",
    "V",
    "mu",
    "mu_std",
    "n",
    "p",
    "p_ref",
    "p_std"
  ],
  "numeric_test.py::test_material_collect_thermo_param": [
    "BostonMathiasAlphaFunction/eta/H2O",
    "BostonMathiasAlphaFunction/eta/NO2",
    "CriticalParameters/T_c/H2O",
    "CriticalParameters/T_c/NO2",
    "CriticalParameters/omega/H2O",
    "CriticalParameters/omega/NO2",
    "CriticalParameters/p_c/H2O",
    "CriticalParameters/p_c/NO2",
    "H0S0ReferenceState/T_ref",
    "H0S0ReferenceState/dh_form/H2O",
    "H0S0ReferenceState/dh_form/NO2",
    "H0S0ReferenceState/p_ref",
    "H0S0ReferenceState/s_0/H2O",
    "H0S0ReferenceState/s_0/NO2",
    "LinearHeatCapacity/cp_a/H2O",
    "LinearHeatCapacity/cp_a/NO2",
    "LinearHeatCapacity/cp_b/H2O",
    "LinearHeatCapacity/cp_b/NO2",
    "MixingRule_A/T_ref",
    "VolumeShift/c_i/H2O",
    "VolumeShift/c_i/NO2"
  ]
}